/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV 1
#define NUM 2
#define Adjust 3

/ {
    keymap {
        compatible = "zmk,keymap";

        BASE_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | esc  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ALT  |
            //                    | TOG | SPC | GUI |   | SHFT | ENT  | BKSP |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E   &kp R      &kp T       &kp Y      &kp U      &kp I                 &kp O       &kp P     &kp BSPC
&kp ESC    &kp A  &kp S  &kp D   &kp F      &kp G       &kp H      &kp J      &kp K                 &mt LCMD L  &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C   &kp V      &kp B       &kp N      &kp M      &kp COMMA             &kp DOT     &kp FSLH  &kp LALT
                         &tog 2  &kp SPACE  &kp LGUI    &kp LSHFT  &kp ENTER  &mt DELETE BACKSPACE
            >;
        };

        NUM_layer {
            // -----------------------------------------------------------------------------------------
            // |` |DEL | |( |) |\ |                                               |/ |7 |8 |9 |- |BSPC | 
            // |BASE |- |= |[ |] | |                                            |* |4 |5 |6 |+ | | 
            // |ALT |UNDO |CUT |COPY |PASTE |REDO |  |, |1 |2 |3 | |ENT | 
            //                    | ADJ|SPC| GUI|   | SHIFT|ENT| 0|

            bindings = <
&kp TAB           &kp DEL    &kp GRAVE  &kp LPAR   &kp RPAR   &kp BSLH     &kp FSLH   &kp N7     &kp N8  &kp N9  &kp MINUS  &kp BSPC
&to 0             &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT   &none        &kp STAR   &kp N4     &kp N5  &kp N6  &kp PLUS   &none
&kp LEFT_CONTROL  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(Y)    &kp COMMA  &kp N1     &kp N2  &kp N3  &none      &kp ENTER
                                        &tog 2     &kp SPACE  &kp LGUI     &kp LSHFT  &kp ENTER  &kp N0
            >;
        };

        NAV_layer {
            // -----------------------------------------------------------------------------------------
            // |   | F1 | F2 | F3 | F4 |   |   |   |   | UP |   | PG UP | HOME |
            // | BASE | F5 | F6 | F7 | F8 |   |  |   | LEFT | DOWN  | RIGHT  |PG DN | END |
            // |CTRL    |F9|F10|F111|F12||  | | | | | | ALT|
            // |    | |                     |TOG |    SPACE       |GUI   |  |SHFT |ENT |BSPC | | | |

            bindings = <
&kp TAB           &kp F1  &kp F2   &kp F3   &kp F4     &kp C_VOL_UP         &none       &none         &kp UP         &none      &kp PG_UP      &kp HOME
&to 0             &kp F5  &kp F6   &kp F7   &kp F8     &kp C_VOLUME_DOWN    &none       &kp LEFT      &kp DOWN       &kp RIGHT  &kp PAGE_DOWN  &kp END
&kp LEFT_CONTROL  &kp F9  &kp F10  &kp F11  &kp F12    &kp C_MUTE           &none       &none         &none          &none      &none          &kp RIGHT_ALT
                                   &tog 3   &kp SPACE  &kp LGUI             &kp LSHIFT  &kp KP_ENTER  &kp BACKSPACE
            >;
        };

        ADJUST_layer {
            // -----------------------------------------------------------------------------------------
            // | | |VDOWN |MUTE |VUP | |  |kpUP |LOCK |SCREENDWN |SCREENUP | |RESET | 
            // |BASE | |REW |PLAY |FF | |  |kpDOWN | |SCREENST |MARK | | | 
            // |BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |  | | | | | |CTRL | 
            //                    | BASE|SPACE| GUI|   | SHIFT|ENT| |

            bindings = <
&kp TAB     &none         &kp C_VOL_DN  &kp C_MUTE    &kp C_VOL_UP  &none           &kp C_BKLT_TOG  &kp LG(L)  &kp C_BRI_UP   &kp C_BRI_DN  &none  &none
&to 0       &none         &kp C_RW      &kp C_PP      &kp C_FF      &none           &none           &none      &kp LS(LG(S))  &none         &none  &none
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none           &none      &none          &none         &none  &kp LCTRL
                                        &to 0         &kp SPACE     &kp LGUI        &kp LSHFT       &kp ENTER  &none
            >;
        };
    };
};
